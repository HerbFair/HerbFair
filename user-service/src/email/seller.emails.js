import mailgen from 'mailgen';
import 'dotenv/config';
import nodemailer from 'nodemailer';
import { moduleLogger } from '@sliit-foss/module-logger';

const logger = moduleLogger('Seller-Email-Service');

const mailTransporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

const sendGeneratedPassord = async (sellerObj, autoGeneratedPassword) => {
  const MailGenerator = new mailgen({
    theme: 'cerberus',
    product: {
      name: 'HerbFair',
      link: 'http://localhost:3000/',
    },
  });

  const email = {
    body: {
      name: `${sellerObj.firstName} ${sellerObj.lastName}`,
      intro: `You have been added as an seller to the HerbFair. Please use the following password to login to your account.`,
      action: {
        instructions: `Your temporary password is:<br><h1>${autoGeneratedPassword}</h1>`,
        button: {
          color: '#22BC66',
          text: 'Go to Seller Dashboard',
          link: 'http://localhost:3000/seller/login/',
        },
      },
      outro: 'To ensure security, we advise you to change your password when you first log in. If you have any queries or concerns, please feel free to contact our support team.',
    },
  };

  // convert mailgen body into HTML
  const mail = MailGenerator.generate(email);

  // nodemailer sending credentials
  const details = {
    from: process.env.EMAIL_USER,
    to: `${sellerObj.email}`,
    subject: `Welcome to the HerbFair`,
    html: mail,
  };

  // send mail through nodemailer
  await mailTransporter
    .sendMail(details)
    .then(() => {
      logger.info(`Email sent to ${sellerObj.email}`);
    })
    .catch((error) => {
      logger.error(`An error occurred when sending email - err: ${error.message}`);
    });
};

const sendOTP = async (sellerObj, otp) => {
  const MailGenerator = new mailgen({
    theme: 'cerberus',
    product: {
      name: 'HerbFair',
      link: 'http://localhost:3000/',
    },
  });

  const email = {
    body: {
      name: `${sellerObj.firstName} ${sellerObj.lastName}`,
      intro: `You have requested to login to the HerbFair Seller Dashboard. Please use the following OTP to login to your account.`,
      action: {
        instructions: `Your OTP is:<br><h1>${otp}</h1>`,
        button: {
          color: '#22BC66',
          text: 'Go to Seller Dashboard',
          link: 'http://localhost:3000/seller/login/',
        },
      },
      outro: 'If you have any queries or concerns, please feel free to contact our support team.',
    },
  };

  // convert mailgen body into HTML
  const mail = MailGenerator.generate(email);

  // nodemailer sending credentials
  const details = {
    from: process.env.EMAIL_USER,
    to: `${sellerObj.email}`,
    subject: `Your OTP`,
    html: mail,
  };

  // send mail through nodemailer
  await mailTransporter
    .sendMail(details)
    .then(() => {
      logger.info(`Email sent to ${sellerObj.email}`);
    })
    .catch((error) => {
      logger.error(`An error occurred when sending email - err: ${error.message}`);
    });
};

const sendWelcomeEmail = async (sellerObj) => {
  const MailGenerator = new mailgen({
    theme: 'cerberus',
    product: {
      name: 'HerbFair',
      link: 'http://localhost:3000/',
    },
  });

  const email = {
    body: {
      name: `${sellerObj.firstName} ${sellerObj.lastName}`,
      intro: `Welcome to the HerbFair. We are glad to have you on board.`,
      action: {
        instructions: `Please use the following link to login to your account.`,
        button: {
          color: '#22BC66',
          text: 'Go to Seller Dashboard',
          link: 'http://localhost:3000/seller/login/',
        },
      },
      outro: 'If you have any queries or concerns, please feel free to contact our support team.',
    },
  };

  // convert mailgen body into HTML
  const mail = MailGenerator.generate(email);

  // nodemailer sending credentials
  const details = {
    from: process.env.EMAIL_USER,
    to: `${sellerObj.email}`,
    subject: `Welcome to the HerbFair`,
    html: mail,
  };

  // send mail through nodemailer
  await mailTransporter
    .sendMail(details)
    .then(() => {
      logger.info(`Email sent to ${sellerObj.email}`);
    })
    .catch((error) => {
      logger.error(`An error occurred when sending email - err: ${error.message}`);
    });
};

const sendLoginAlert = async (sellerObj) => {
  const MailGenerator = new mailgen({
    theme: 'cerberus',
    product: {
      name: 'HerbFair',
      link: 'http://localhost:3000/',
    },
  });

  const email = {
    body: {
      name: `${sellerObj.firstName} ${sellerObj.lastName}`,
      intro: `You have logged in to the HerbFair Seller Dashboard.`,
      action: {
        instructions: `If you have not logged in to your account, please change your password immediately.`,
        button: {
          color: '#22BC66',
          text: 'Go to Seller Dashboard',
          link: 'http://localhost:3000/seller/login/',
        },
      },
      outro: 'If you have any queries or concerns, please feel free to contact our support team.',
    },
  };

  // convert mailgen body into HTML
  const mail = MailGenerator.generate(email);

  // nodemailer sending credentials
  const details = {
    from: process.env.EMAIL_USER,
    to: `${sellerObj.email}`,
    subject: `Login Alert`,
    html: mail,
  };

  // send mail through nodemailer
  await mailTransporter
    .sendMail(details)
    .then(() => {
      logger.info(`Email sent to ${sellerObj.email}`);
    })
    .catch((error) => {
      logger.error(`An error occurred when sending email - err: ${error.message}`);
    });
};

const SellerEmailService = {
  sendGeneratedPassord,
  sendOTP,
  sendWelcomeEmail,
  sendLoginAlert,
};

export default SellerEmailService;
